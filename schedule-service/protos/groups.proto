syntax = "proto3";

package schedule;

service ScheduleService{
    rpc CreateGroup(CreateGroupReq) returns (CreateGroupRes);
    // rpc UpdateGroup(UpdateGroupReq) returns (UpdateGroupRes);
    rpc GetAllGroup(Empty) returns (GetAllGroupRes);
    rpc DeleteGroup(DeleteGroupReq) returns (Empty);
    rpc Attandence(AttandenceReq) returns (Empty);
    rpc GetGroup(GetGroupReq) returns (GetGroupRes);
    rpc ListGroups(ListGroupsReq) returns (ListGroupsRes);
    
}
message ListGroupsReq{
    string company_id=1;
}
message ListGroupsRes{
    repeated ListGroups groups=1;
}
message ListGroups{
    string id =1;
    string group_name=2;
}
message GetGroupReq{
    string id=1;
    
}
message GetGroupRes{
    repeated GetGrooup students =1;
}
message GetGrooup{
    string id =1;
    string group_id = 2;
}
message AttandenceRequa{
    string id =1;
    string student_id =2;
    string group_id = 3;
    bool attendance =4;
    string attendance_date = 5; 
    string feedback = 6;
}
message AttandenceReq{
    repeated AttandenceRequa student =1;
}

message GetByIdReq{
    string id=1;
}

message GetByIdRes{

}

message DeleteGroupReq{
    string id =1;
}
message CreateGroupReq{
    string id =1;
    string company_name =2;
    string user_id =3;
    string group_name =4;
    string created_at =5;
    string updated_at =6;
    string deleted_at =7;
}
message CreateGroupRes{
    string company_name =1;
    string group_name =2;

}

message UpdateGroupReq{
    string id =1;
    string company_name=2;
    string user_id =3;
    string group_name =4;
    string updated_at=5;
}
message UpdateGroupRes{
    string company_name =1;
    string group_name =2;
    string updated_at=3;
}

message GetAllGroupRes{
    repeated Getall groups=1;
}
message Getall{

    string group_name =1;
    string created_at =2;

}

message Empty{}